version: '2.1'
services:
  squidex_mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - /etc/squidex/mongo/db:/data/db
    networks:
      - internal
    restart: unless-stopped

  squidex_squidex:
    image: "squidex/squidex:v1.1.7"
    ports:
      - "5000:80"
    environment:
      - URLS__BASEURL=${SQUIDEX_PROTOCOL}://${SQUIDEX_DOMAIN}/
      - URLS__ENFORCEHTTPS=${SQUIDEX_FORCE_HTTPS}
      - EVENTSTORE__CONSUME=true
      - EVENTSTORE__MONGODB__CONFIGURATION=mongodb://squidex_mongo
      - STORE__MONGODB__CONFIGURATION=mongodb://squidex_mongo
      - IDENTITY__ADMINEMAIL=${SQUIDEX_ADMINEMAIL}
      - IDENTITY__ADMINPASSWORD=${SQUIDEX_ADMINPASSWORD}
      - IDENTITY__GITHUBCLIENT=
      - IDENTITY__GITHUBSECRET=
      - IDENTITY__GOOGLECLIENT=
      - IDENTITY__GOOGLESECRET=
      - IDENTITY__MICROSOFTCLIENT=
      - IDENTITY__MICROSOFTSECRET=
      - LETSENCRYPT_HOST=${SQUIDEX_DOMAIN}
      - LETSENCRYPT_EMAIL=${SQUIDEX_ADMINEMAIL}
      - VIRTUAL_HOST=${SQUIDEX_DOMAIN}
    depends_on:
      - squidex_mongo
    volumes:
      - /etc/squidex/assets:/app/Assets
    networks:
      - internal
    restart: unless-stopped

  squidex_proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/squidex/nginx/vhost.d:/etc/nginx/vhost.d
      - /etc/squidex/nginx/certs:/etc/nginx/certs:ro
      - /etc/squidex/nginx/html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - squidex_squidex
    networks:
      - internal
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  squidex_encrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - /etc/squidex/nginx/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    volumes_from:
      - squidex_proxy
    depends_on:
      - squidex_proxy
    networks:
      - internal
    restart: unless-stopped
    
networks:
  internal:
    driver: bridge